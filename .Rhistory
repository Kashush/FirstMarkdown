sample(colors(), 10)
pal(colorRamp(c("red", "blue")))
pal<-colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1<-colorRampPalette(c("red", "blue"))
p1(2)
p1(6)
0xcc
p2<-colorRampPalette(c("red", "yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rgb
p2<-colorRampPalette(c("blue", "green"), alpha=.5)
p3<-colorRampPalette(c("blue", "green"), alpha=.5)
p3(5)
plot(x,y,pch=19, col=rgb(0, .5, .5))
plot(x,y,pch=19, col=rgb(0, .5, .5,.3))
cols<-brewer.pal(3, "BuGn")
showMe(cols)
pal<-colorRampPalette(cols)
showMe(pal(20))
image(volcano,col=pal(20))
image(volcano,col=p1(20))
rm(list=ls())
library(swirl)
swirl()
str(mpg)
qplot(displ, hwy, mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, color=drv, geom-c("point", "smooth"))
qplot(displ, hwy, data=mpg, color=drv, geom=c("point", "smooth"))
qplot(y=hwy, data=mpg, color=drv)
myhigh
qplot(drv, hwy,data=mpg,geom="boxplot")
qplot(drv, hwy,data=mpg,geom="boxplot", color=manufacturer)
qplot(hwy, data=mpg, fill=drv)
qplot(displ, hwy, data=mpg, facets = .~drv)
qplot(hwy, data=mpg, facets=drv ~ .,binwidth = 2)
qplot(displ, hwy, data=mpg,geom=c("point", "smooth"), facets=.~drv)
g<-ggplot(aes(displ, hwy))
g<-ggplot(mpg, aes(displ, hwy))
summary(g)
g + geom_point()
g + geom_point() + geom_smooth()
g + geom_point() + lm()
g + geom_point() + geom_smooth(lm)
g + geom_point() + geom_smooth("lm")
g + geom_point() + geom_smooth()=lm
g + geom_point() + lm=geom_smooth()
g + geom_point() + geom_smooth(method="lm")
g + geom_point() + geom_smooth(method="lm") + facet_grid=.~drv
g + geom_point() + geom_smooth(method="lm") + facet_grid(.~drv)
g + geom_point() + geom_smooth(method="lm") + facet_grid(.~drv) + ggtitle("Swirl Rules!")
g + geom_point(color="pink",size=4,alpha=1/2)
g + geom_point(size=4,alpha=1/2, aes(color=drv))
g + geom_point(size=4,alpha=1/2, aes(color=drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color=drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color=drv),size=2, alpha=1/2) + geom_smooth(size=1,linetype=3,method="lm", se=FALSE)
g + geom_point(aes(color=drv),size=2, alpha=1/2) + geom_smooth(size=4,linetype=3,method="lm", se=FALSE)
g + geom_point(color=drv) + theme_bw(base_family="Times")
g + geom_point(aes(color=drv)) + theme_bw(base_family="Times")
plot(myx, myy, type="1", ylim=c(3,3))
plot(myx, myy, type="l", ylim=c(3,3))
plot(myx, myy, type="l", ylim=c(-3,3))
g<-ggplot(testdat, aes(x=myx, y=myy))
g + geom_line()
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim=c(-3,3)))
g + geom_line() + coord_cartesian(ylim=c(-3,3))
g<-ggplot(mpg, aes(x=displ, y=hwy, color=factor(Year)))
g<-ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))
g + geom_point()
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)
g + geom_point() + facet_grid(drv~cyl,margins=TRUE) + geom_smooth(method="lm", se=FALSE,size=2, color="black")
g + geom_point() + facet_grid(drv~cyl,margins=TRUE) + geom_smooth(method="lm", se=FALSE,size=2, color="black") + lab(x="Displacement", y="Highway Mileage", title="Swirl Rules!")
g + geom_point() + facet_grid(drv~cyl,margins=TRUE) + geom_smooth(method="lm", se=FALSE,size=2, color="black") + labs(x="Displacement", y="Highway Mileage", title="Swirl Rules!")
str(diamonds)
qplot(price, data=diamonds)
range(diamonds$price)
qplot(price, data=diamonds,binwidth=18497/30)
brk
counts
qplot(price, data=diamonds, binwidth=18497/30,fill=cut)
qplot(price, data=diamonds, geom="density")
qplot(price, data=diamonds, geom="density", color=cut)
qplot(carat, price, data=diamonds)
qplot(carat, price, data=diamonds, shape=cut)
qplot(carat, price, data=diamonds, color=cut)
qplot(carat, price, data=diamonds, color=cut, geom_smooth(method=lm()))
qplot(carat, price, data=diamonds, color=cut, geom_smooth(method="lm"))
qplot(carat, price, data=diamonds, color=cut, geom_smooth(method="lm"))
qplot(carat, price, data=diamonds, color=cut, geom_smooth(method=lm))
qplot(carat, price, data=diamonds, color=cut
)
qplot(carat, price, data=diamonds, color=cut) + geom_smooth(method=lm)
qplot(carat, price, data=diamonds, color=cut) + geom_smooth(method="lm")
qplot(carat, price, data=diamonds, color=cut) + geom_smooth(method="lm") + facets=.~cut
qplot(carat, price, data=diamonds, color=cut,facets=.~cut) + geom_smooth(method="lm")
g<-ggplot(diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha=1/3)
cutpoints<-quantile(diamonds$carat,seq(0,1,length=4), na.rm=TRUE)
cutpoints
diamonds$car2<-cut(diamonds$carat, cutpoints)
g<-ggplot(diamonds, aes(depth, price))
g + geom_point(alpha=1/3) +facet_grid(cut~car2)
diamonds[myd,]
g + geom_point(alpha=1/3) +facet_grid(cut~car2) geom_smooth(method="lm", size=3, color="pink")
g + geom_point(alpha=1/3) +facet_grid(cut~car2) + geom_smooth(method="lm", size=3, color="pink")
ggplot(diamonds, aes(carat,price)) + geom_boxplot() + facet_grid(. ~ cut)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
str(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
qplot(votes, rating, data = movies)
data(movies)
str(movies)
load(ggplot2)
library(ggplot2)
ls
dir
rm(list=ls(all=TRUE))
swirl()
dist(dataFrame)
hc<-hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(col="blue",h=1.5)
abline(v=.4, col="red")
abline(h=.4, col="red")
5
5
abline(h=.05,col="green")
12
abline(h=.05,col="green")
dist(dFsm)
hc
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
plot(dermt)
plot(denmt)
distmt
rm(list=ls(all=TRUE))
swirl()
library(swirl)
swirl()
cmat
points(cx, cy, col=c("red", "orange", "purple"), pch = 3, cex=2, lwd=2)
mdist(x,y,cx, cy)
which.min(distTmp,2,which.min)
which.min(distTmp,2,which.min())
apply(distTmp,2,which.min())
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols(newClust))
points(x,y,pch=19,cex=2,col=cols[newClust])
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x, newclust,mean)
tapply(x, newClust,mean)
tapply(y, newClust,mean)
points(newCx, newCy,col=cols1, pch=8, cex=2, lwd=2)
mdist(x,y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, pch=19, cex=2,col=colS1[newClust2])
points(x, y, pch=19, cex=2,col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col=cols1, pch=9, cex=2, lwd=2)
kmenas(dataFrame, centers=3)
kmeans(dataFrame, centers=3)
kmobj$iter
kmObj$iter
plot(x, y, col=kmOjb$cluster, pch=19, cex=2)
plot(x, y, col=kmObj$cluster, pch=19, cex=2)
points(kmOjb$centers, col=c("black", "red", "green"), pch=3, cex=3, lwd=3)
points(kmObj$centers, col=c("black", "red", "green"), pch=3, cex=3, lwd=3)
plot(x, y, col = kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x, y, col = kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x, y, col = kmeans(dataFrame,6)$cluster, pch=19, cex=2)
?kmeans
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
myedit(file="addPatt.R")
myedit("addPatt.R")
?myedit
options(editor = "internal")
myedit("addPatt.R")
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %% diag %% t(matv)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
0
exit
swirl()
library(swirl)
rm(list=ls())
options(editor = "internal")
swirl()
head(constantMatrix)
svd2$d
svd2[,1:2]
svd2[,c(1,2)]
svd2[,2]
v[,1:2]
svd2
svd2$v[,1:2]
svd2$d
dim(faceData)
a1<-svd1$u[,1] %*% svd1$d[1]
a1<-(svd1$u[,1]) %*% (svd1$d[1])
a1<-(svd1$u[,1]) * (svd1$d[1])
a1<-(svd1$u[,1]) * svd1$d[1] %*% t(svd1$v[,1])
a1<-(svd1$u[,1]) %*% t(svd1$v[,1]) * svd1$d[1]
a1<-svd1$u[,1] %*% t(svd1$v[,1]) * svd1$d[1]
myImage(a1)
a2<-svd1$u[,1:2] %*% t(svd1$v[,1:2]) %*% svd1$d[1:2]
a2<-svd1$u[,1:2] %*% t(svd1$v[,1:2]) %*% diag(svd1$d[1:2])
a2<-svd1$u[,1:2] %*% t(svd1$v[,1:2]) * diag(svd1$d[1:2])
a2<-svd1$u[,1:2] %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a5 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1<-subset(ssd, subject==1)
dim(sub1)
names(sub1[1:12,])
names(sub1[1:12])
myedit("showXY.R")
showMe(1:6)
mdist<-dist(sub1[,1:3])
hclust(mdist)
hClustering<-hclust(mdist)
hclustering<-hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
mdist<-dist(sub1[,10:12])
hclustering<-hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
svd1<-svd(scale(sub1[,-c(562,563)]))
dim(svd$u)
dim(svd1$u)
maxCon<=which.max(svd1$v[,2])
maxCon<-which.max(svd1$v[,2])
mdist<-dist(sub1[,c(10:12, maxCon)])
hClustering<-hclust(mdist)
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
names(sub1[maxCon])
kClus<-kmeans(sub1[,1:10], centers = 6)
kClus<-kmeans(sub1[,-c(562,563)], centers = 6)
kClust<-kmeans(sub1[,-c(562,563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust<-kmeans(sub1[,-c(562,563)], centers = 6, nstart=100)
table(kClust$cluster, sub1$activity)
dim(kClust)
dim(kClust$centers)
laying<-which(kClust$size==29)
plot(kClust$centers[laying, 1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
walkdown<-which(kClust$size==49)
plot(kClust$centers[walkdown, 1:12], pch=19, ylab="Walkdown Cluster")
rm(list=ls())
library(swirl)
swirl()
dm(rm)
dim(rm)
dim(pm0)
head(pm0)
cnames
cnames<-strsplit(cnames, "|", fixed=TRUE)
cnames
names(pm0)<-make.names(cnames[[1]][wcol])
head(pm0)
x0<-pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1)<-make.names(cnames[[1]], [wcol])
names(pm1)<-make.names(cnames[[1]][wcol])
dim(pm1)
x1<-pm1$sample.value
x1<-pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative<-x1<0
sum(negative, na.rm=true)
sum(negative, na.rm=TRUE)
mean(sum(negative, na.rm=TRUE))
mean(negative, na.rm=TRUE)
date<-pm1$Date
dates<-pm1$Date
str(dates)
dates<-as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
both<-intersect(site0, site1)
both
head(pm0)
cnt0<-subset(pm0, State.Code==36 & county.site %in% both)
cnt1<-subset(pm1, State.Code==36 & county.site %in% both)
sapply(split(cnt0, cnt0$Count.site), nrow)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub<-subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub<-subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub<-pm0sub$Sample.Value
x1sub<-pm1sub$Sample.Value
dates0<-as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1<-as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow=c(1,2),mar=c(4,4,2,1))
plot(dates0, x0sub, pch=20)
abline(median(x0sub, na.rm=TRUE))
abline(lwd=2)
abline(h=median(x0sub, na.rm=FALSE), lwd=2)
abline(h=median(x0sub, na.rm=TRUE), lwd=2)
plot(dates1, x1sub, pch=20)
abline(h=median(x1sub, na.rm=TRUE), lwd=2)
rng<-range(x0sub, x1sub, na.rm=TRUE)
rng
mn0<-with(pm0, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn0)
mn1<-with(pm1sub, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
mn1<-with(pm1, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0<-data.frame(state=names(mn0), mean=mn0)
d1<-data.frame(state=names(mn1), mean=mn1)
mrg<-merge(d0,d1,by="State")
mrg<-merge(d0,d1,by=="State")
mrg<-merge(d0,d1,by=="state")
mrg<-merge(d0,d1,by="state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2], xlim=c(.5,2.5)))
with(mrg, points(rep(2,52), mrg[,3]))
segments(rep(1,52), mrg[,2], rep(2,52), mrg[,3])
mrg[mrg$mean.x<mrg$mean.y]
mrg[mrg$mean.x < mrg$mean.y,]
source('C:/Users/Corina/Emissions/plot4.R')
source('C:/Users/Corina/Emissions/plot4.R')
source('C:/Users/Corina/Emissions/plot4.R', encoding="UTF")
source('C:/Users/Corina/Emissions/plot4.R', encoding="UTF-8")
source('C:/Users/Corina/Emissions/plot4.R', encoding="WINDOWS-1252")
source('C:/Users/Corina/Emissions/plot4.R')
source('C:/Users/Corina/Emissions/plot4.R')
source('C:/Users/Corina/Emissions/plot4.R')
source('C:/Users/Corina/Emissions/plot4.R')
source('C:/Users/Corina/Emissions/plot4.R')
source('C:/Users/Corina/Emissions/plot4.R')
source('C:/Users/Corina/Emissions/plot4.R')
source('C:/Users/Corina/Emissions/plot4.R', encoding="WINDOWS-1252")
URL<-"http://www.un.org/en/development/desa/population/publications/dataset/marriage/data/UNPD_WMD_2015_MARITAL_STATUS.xlsx"
download.file(URL)
download.file(URL, "WorldPop.xlsx", mode="wb")
fert<-read.xls("WorldPop.xlsx")
library(xlsx)
fert<-read.xlsx("WorldPop.xlsx")
fert<-read.xlsx("WorldPop.xlsx", sheetName = "FERTILITY_INDICATORS", startRow = 3, header = TRUE)
head(fert)
fert
rm(list=ls())
library(xlsx)
URL<-"http://esa.un.org/unpd/wpp/DVD/Files/1_Indicators%20(Standard)/EXCEL_FILES/1_Population/WPP2015_POP_F03_RATE_OF_NATURAL_INCREASE.XLS"
download.file(URL, "NaturalIncrease.xls", mode="wb")
ni<-read.xlsx2("NaturalIncrease.xls", sheetName="ESTIMATES", startRow = 17)
head(ni)
names(ni)
ni<-read.xlsx2("NaturalIncrease.xls", sheetName="ESTIMATES", startRow = 17, header=TRUE)
head(ni)
names(ni)
ni$Change<-ni$X2010.2015 - ni$X1950.1955
class(ni)
structure(ni)
str(ni)
names(ni)
ni$X1950.1955<-as.numeric(as.character(ni$X1950.1955))
ni$X2010.2015<-as.numeric(as.character(ni$X2010.2015))
ni$Change<-ni$X2010.2015 - ni$X1950.1955
head(ni)
library(ggplot2)
str(ni)
table(ni$Variant)
head(ni)
table(ni$Notes)
library(dplyr)
arrange(ni,Change)
OrderedNI<-arrange(ni, Change)
head(OrderedNI, 10)
quantile(ni$Change)
shrinking<-OrderedNI[1:10,]
nrow(orderedNI)
nrow(OrderedNI)
nrow(ni)
growing<-OrderedNI[232:241,]
names(shrinking)
qplot(Country.code, Change, shrinking)
qplot(Country.code, Change, shrinking, na.rm=TRUE)
sum(is.na(shrinking$Change))
qplot(Country.code, Change, shrinking)
sum(is.na(shrinking$Country.code))
with(shrinking, qplot(Country.code, Change))
sum(is.na(shrinking$Major.area..region..country.or.area..))
qplot(Major.area..region..country.or.area.., Change, shrinking)
qplot(Major*, Change, shrinking)
names(shrinking)
names(Shrinking)[3]<-Area
names(Shrinking)[3]<-"Area"
names(shrinking)[3]<-"Area"
with(shrinking, qplot(area, Change))
names(shrinking)
with(shrinking, qplot(Area, Change))
theme(axis.title.x = element_text(angle=90))
theme(axis.title.x = element_text(angle=15))
with(shrinking, qplot(Area, Change, geom="histogram"))
with(shrinking, plot(Area, Change))
with(shrinking, qplot(Area, Change)) + geom_histogram()
with(shrinking, qplot(Area, Change,geom="bar"))
with(shrinking, qplot(Area, Change))
ggplot(data=shrinking, Area, Change) + geom_bar()
ggplot(Area, Change, data=shrinking) + geom_bar()
names(shrinking)
ggplot(data=shrinking, aes(Area, Change)) + geom_bar()
ggplot(data=shrinking, aes(Area, Change)) + geom_point()
opts(axis.text.x=theme_text(angle=-90))
ggplot(data=shrinking, aes(Area, Change)) + geom_point() + opts(axis.text.x=theme_text(angle=-90))
ggplot(data=shrinking, aes(Area, Change)) + geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=shrinking, aes(Area, Change)) + geom_area() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=shrinking, aes(Area, Change)) + geom_bar() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=shrinking, aes(Area, Change)) + geom_pointrange() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=shrinking, aes(Area, Change)) + geom_point(pch=14) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=shrinking, aes(Area, Change)) + geom_point(pch=22) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=shrinking, aes(Area, Change)) + geom_point(pch=5) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=shrinking, aes(Area, Change)) + geom_point(size=3) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=OrderedNI, aes(Area, Change)) + geom_point(size=3) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
names(OrderedNI)[3]<-"Area"
ggplot(data=OrderedNI, aes(Area, Change)) + geom_point(size=3) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
seq(0,1, length=11)
cutpoints<-quantile(OrderedNI$Change, seq(0,1,length=11), na.rm = TRUE)
cutpoints
OrderedNI$Quant<-cut(OrderedNI$Change, cutpoints)
OrderedNI[,c("Change", "Quant")]
ggplot(data=OrderedNI, aes(Area, Change)) + geom_point(size=3) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + facet_wrap(Quant)
ggplot(data=OrderedNI, aes(Area, Change)) + geom_point(size=3) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + facet_grid(Quant)
names(OrderedNI)
ggplot(data=OrderedNI, aes(Area, Change)) + geom_point(size=3) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + facet(Quant)
str(OrderedNI)
ggplot(data=OrderedNI, aes(Area, Change)) + geom_point(size=3) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + facet(Quant)
g<-ggplot(data=OrderedNI, aes(Area, Change))
g + geom_point(size=3) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + facet(Quant)
table(OrderedNI$Quant)
g<-ggplot(data=OrderedNI, aes(Area, Change), facet(Quant))
g + geom_point(size=3) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
g<-ggplot(data=OrderedNI, aes(Area, Change), facet=Quant)
g + geom_point(size=3) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
g<-ggplot(data=OrderedNI, aes(Area, Change))
g + geom_point(size=3) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + facet(Quant)
g + geom_point(size=3) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + facet(OrderedNI$Quant, shrink = TRUE)
qplot(Area, Change, data=OrderedNI, facets=.~Quant)
g + facet(quant) + geom_point(size=3) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
g + facet(Quant) + geom_point(size=3) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
g + facet(Ordert) + geom_point(size=3) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
g + facet(OrderedNI$Quant) + geom_point(size=3) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
g + facet_Wrap(. ~ OrderedNI$Quant) + geom_point(size=3) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
g + facet_wrap(. ~ OrderedNI$Quant) + geom_point(size=3) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
g + facet_wrap(. ~ OrderedNI$Quant) + geom_point(size=3) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
g + facet(. ~ OrderedNI$Quant) + geom_point(size=3) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
g + facet_grid(. ~ OrderedNI$Quant) + geom_point(size=3) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
OrderedNI[is.na(OrderedNI$Quant),]
cutpoints<-quantile(OrderedNI$Change, seq(0,1,length=11), na.rm = TRUE)
cutpoints
OrderedNI$Quant<-cut(OrderedNI$Change, cutpoints)
table(OrderedNI$Quant)
sum(is.na(OrderedNI$Quant))
OrderedNI<-OrderedNI[!is.na(OrderedNI$Quant),]
ggplot(data=OrderedNI, aes(Area, Change)) + facet_grid(. ~ OrderedNI$Quant) + geom_point(size=3) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=OrderedNI, aes(Area, Change)) + facet_grid(. ~ Quant) + geom_point(size=3) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=OrderedNI, aes(Country.code), Change)) + facet_grid(. ~ Quant) + geom_point(size=3) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=OrderedNI, aes(Country.code, Change)) + facet_grid(. ~ Quant) + geom_point(size=3) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
setwd("~/GitHub/FirstMarkdown")
